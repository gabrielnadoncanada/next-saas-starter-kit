# GitHub action to build

name: Build

on:
  push:
    branches:
      - main
      - release
  pull_request:
    branches:
      - main

jobs:
  ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22]

    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postgres
      NEXTAUTH_URL: http://localhost:4002
      NEXTAUTH_SECRET: secret
      NEXTAUTH_SESSION_STRATEGY: database
      AUTH_PROVIDERS: github,credentials,idp-initiated
      FEATURE_TEAM_SSO: true
      FEATURE_TEAM_DELETION: true
      FEATURE_TEAM_PAYMENTS: true
      CONFIRM_EMAIL: false
      HIDE_LANDING_PAGE: false
      GROUP_PREFIX: boxyhq-
      DISABLE_NON_BUSINESS_EMAIL_SIGNUP: false
      APP_URL: http://localhost:4002
      DEBUG: pw:webserver

    services:
      postgres:
        image: postgres:16.4
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: ''
          POSTGRES_HOST_AUTH_METHOD: 'trust'
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          check-latest: true
      - run: npm install
      - run: npm run check-lint
      - run: npm run check-format
      - run: npm run check-locale
      - run: npm run test
      - run: npm run build-ci
      - run: npm run check-types
      - run: npx prisma migrate deploy
      - name: Install playwright browser dependencies
        run: npx playwright install chromium
      - name: e2e tests
        run: npx playwright test -x
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 2
